<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="findPwd" width="500" height="420" titletext="New Form">
    <Layouts>
      <Layout height="420" width="500">
        <Static id="stt_id" taborder="0" text="아이디" left="50" top="85" width="100" height="30" font="16px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_id" taborder="1" left="166" top="85" width="184" height="30" inputtype="digit" maxlength="4"/>
        <Static id="stt_name" taborder="2" text="이름" left="50" top="135" width="80" height="30" font="16px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_name" taborder="3" left="166" top="135" width="184" height="30" inputfilter="none,comma,digit,dot,symbol,sign"/>
        <Static id="stt_pwd1" taborder="4" text="새 비밀번호" left="50" top="240" width="100" height="30" font="16px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_pwd1" taborder="5" left="166" top="240" width="184" height="30" readonly="true" password="true" imeaction="search" text="asdfj;" tooltiptext="문자, 숫자, 특수문자가 필요하며, 8자 이상이 필요합니다." onchanged="edt_pwd1_onchanged"/>
        <Static id="stt_pwd2" taborder="6" text="비밀번호 확인" left="50" top="290" width="100" height="30" font="16px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_pwd2" taborder="7" left="166" top="290" width="184" height="30" readonly="true" password="true"/>
        <Static id="stt_code" taborder="8" text="인증 번호" left="50" top="185" width="80" height="30" font="16px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_code" taborder="9" left="166" top="185" width="184" height="30" readonly="true" inputfilter="none" inputtype="digit" maxlength="6"/>
        <Button id="btn_sendCode" taborder="10" text="인증번호 발송" left="356" top="135" width="94" height="30" onclick="btn_sendCode_onclick"/>
        <Button id="btn_checkCode" taborder="11" text="인증번호 확인" left="356" top="185" width="94" height="30" onclick="btn_checkCode_onclick"/>
        <Button id="btn_update" taborder="12" text="변경" left="174" top="345" width="72" height="30" onclick="btn_update_onclick"/>
        <Button id="btn_close" taborder="13" text="닫기" left="249" top="345" width="72" height="30" onclick="btn_close_onclick"/>
        <Static id="stt_board" taborder="14" text="비밀번호 찾기" left="158" top="10" width="185" height="49" font="30px/normal &quot;Gulim&quot;"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/************************************************************************
 * 								콜백함수
 ************************************************************************/
// 코드 
this.fnCallback = function(svcID, errCD, errMsg) {
	
	if (errCD == -1 ) {
		alert(errMsg);
		return;
	}
	
	switch(svcID) {
		case "userCheck" :
			if (this.ds_valicheck.getColumn(0, "usercheck") == "Y"){
				alert("인증코드가 이메일로 발송되었습니다.");
				this.edt_code.set_readonly(false);
				this.btn_sendCode.set_enable(false);
			} else {
				alert("일치하는 회원정보가 없습니다.");
			}

		break;
		
		case "matchCode" :
			if (this.ds_valicheck.getColumn(0, "codecheck") == "Y") {
				alert("인증이 완료되었습니다.");
				this.edt_pwd1.set_readonly(false);
				this.edt_pwd2.set_readonly(false);
				this.btn_checkCode.set_enable(false);
			} else {
				alert("인증번호가 일치하지 않습니다.");
				this.edt_code.set_value("");
			}
		break;
		
		case "updatePwd" :
		
		
			alert("비밀번호가 변경되었습니다.");
			this.close();
		break;
	}
}




/************************************************************************
 * 								 트랜잭션
 ************************************************************************/

// 유저가 db에 있는지 확인 후 이메일 보내기 이후 fnCallbackSendMail
this.fnCheckUser = function() {
	var strSvcId    = "userCheck";
    var strSvcUrl   = "svc::userCheck.do";
    var inData      = "ds_check=ds_check";
    var outData     = "ds_valicheck=ds_valicheck";  // 결과를 받을 데이터셋
    var strArg      = ""
    var callBackFnc = "fnCallback";
    var isAsync     = true;

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
}

// 인증번호 매치
this.fnMatchCode = function() {

	var strSvcId    = "matchCode";
	var strSvcUrl   = "svc::matchCode.do";
	var inData      = "ds_vericheck=ds_vericheck";
	var outData     = "ds_valicheck=ds_valicheck";  // 결과를 받을 데이터셋
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 비밀번호 업데이트
this.fnUpdatePwd = function() {

	var strSvcId    = "updatePwd";
	var strSvcUrl   = "svc::updatePwd.do";
	var inData      = "ds_check=ds_check";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;

	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};


/************************************************************************
 *								버튼 이벤트 
 ************************************************************************/


//인증번호 발송 버튼
this.btn_sendCode_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if (this.edt_id.value == null || this.edt_id.value == "" || this.edt_id.value == "undefined") {
		alert("아이디가 입력되지 않았습니다.");
	} else if (this.edt_name.value == null || this.edt_name.value == "" || this.edt_name.value == "undefined") {
		alert("이름이 입력되지 않았습니다.")
	} else if (this.edt_id.value.length = 4) {

	this.ds_check.setColumn(0, "id", this.edt_id.value);
	this.ds_check.setColumn(0, "name", this.edt_name.value);
		
	this.fnCheckUser();
	
	} else {
		alert("일치하는 회원정보가 없습니다.");
	}
};

//인증번호 확인 버튼
this.btn_checkCode_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.ds_vericheck.setColumn(0, "OK", this.edt_code.value);
	

	this.fnMatchCode();
};


//수정 버튼
this.btn_update_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.ds_check.setColumn(0, "PASSWORD1", this.edt_pwd1.value);
	this.ds_check.setColumn(0, "PASSWORD2", this.edt_pwd2.value);
	if (this.edt_pwd1.value == null || this.edt_pwd1.value == "" || this.edt_pwd1.value == "undefined") {
		alert("모든 항목을 입력해주세요.");
	} else {
		if (this.edt_pwd1.value == this.edt_pwd2.value) {
			this.fnUpdatePwd();
		} else {
			alert("새 비밀번호와 비밀번호 확인이 일치하지 않습니다.");
		}
	}
};

//닫기 버튼
this.btn_close_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close();
};

/************************************************************************
 * 								타 이벤트
 ************************************************************************/
 
 // 비밀번호 정규식
this.edt_pwd1_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
    var password = obj.value;
    var regex = /^(?=.*[!@#$%^&*(),.?":{}|<>])[A-Za-z\d!@#$%^&*(),.?":{}|<>]{8,}$/;
		if (!regex.test(password)) {
			alert("비밀번호는 최소 8자 이상이며, 특수문자가 포함되어야 합니다.");
			obj.set_value("");
			obj.setFocus();
		} else {
			trace("비밀번호가 변경되었습니다.");
		}	
};

]]></Script>
    <Objects>
      <Dataset id="ds_check">
        <ColumnInfo>
          <Column id="id" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
          <Column id="PASSWORD1" type="STRING" size="256"/>
          <Column id="PASSWORD2" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_vericheck">
        <ColumnInfo>
          <Column id="OK" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_valicheck">
        <ColumnInfo>
          <Column id="usercheck" type="STRING" size="256"/>
          <Column id="codecheck" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
  </Form>
</FDL>
