<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="score_list" width="1280" height="720" titletext="New Form" onload="score_list_onload">
    <Layouts>
      <Layout height="720" width="1280">
        <Combo id="cmb_year" taborder="0" left="460" top="50" width="167" height="26" innerdataset="ds_year" codecolumn="YEAR" datacolumn="DATA" onitemchanged="cmb_year_onitemchanged" text="년도를 선택해주세요" index="0" value="ALL"/>
        <Grid id="grd_class" taborder="1" left="460" top="80" width="605" height="160" binddataset="ds_class" oncellclick="grd_class_oncellclick" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="47"/>
                <Column size="71"/>
                <Column size="161"/>
                <Column size="71"/>
                <Column size="64"/>
                <Column size="48"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="NO"/>
                <Cell col="1" text="강의코드" autosizerow="default" autosizecol="default"/>
                <Cell col="2" text="강의명" autosizerow="default" autosizecol="default"/>
                <Cell col="3" text="담당교수" autosizerow="default" autosizecol="default"/>
                <Cell col="4" text="년도"/>
                <Cell col="5" text="학기"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" text="bind:CLASS_CODE"/>
                <Cell col="2" text="bind:CLASS_NAME"/>
                <Cell col="3" text="bind:NAME"/>
                <Cell col="4" text="bind:CLASS_START"/>
                <Cell col="5" text="bind:SEMESTER"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid id="grd_dept" taborder="2" left="50" top="80" width="400" height="160" autofittype="none" binddataset="ds_dept" oncellclick="ds_dept_onrowposchanged">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="133"/>
                <Column size="265"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="코드번호"/>
                <Cell col="1" text="학과명"/>
              </Band>
              <Band id="body">
                <Cell text="bind:DEPARTMENT_CODE"/>
                <Cell col="1" text="bind:DEPARTMENT_NAME"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Combo id="cmb_searchType" taborder="3" left="50" top="250" width="100" height="26" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="0" text="선택" value="0" onitemchanged="cmb_searchType_onitemchanged">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">0</Col>
                <Col id="datacolumn">선택</Col>
              </Row>
              <Row>
                <Col id="codecolumn">STUDENT_ID</Col>
                <Col id="datacolumn">학번</Col>
              </Row>
              <Row>
                <Col id="codecolumn">NAME</Col>
                <Col id="datacolumn">이름</Col>
              </Row>
            </Rows>
          </Dataset>
        </Combo>
        <Edit id="edt_searchKeyword" taborder="4" left="154" top="250" width="171" height="26"/>
        <Button id="btn_searchStd" taborder="5" text="조회" left="332" top="250" width="63" height="26" onclick="btn_searchStd_onclick"/>
        <Grid id="grd_scoreList" taborder="6" left="50" top="280" width="1015" height="280" binddataset="ds_scoreList" autofittype="col" oninput="grd_scoreList_oninput">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="48"/>
                <Column size="48"/>
                <Column size="48"/>
                <Column size="48"/>
                <Column size="48"/>
                <Column size="48"/>
                <Column size="48"/>
                <Column size="48"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="수정"/>
                <Cell col="1" text="학번"/>
                <Cell col="2" text="이름"/>
                <Cell col="3" text="중간"/>
                <Cell col="4" text="기말"/>
                <Cell col="5" text="과제"/>
                <Cell col="6" text="총점"/>
                <Cell col="7" text="등급"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" text="bind:CHECK"/>
                <Cell col="1" text="bind:STUDENT_ID"/>
                <Cell col="2" text="bind:NAME"/>
                <Cell col="3" text="bind:MIDDLE_TEST" displaytype="normal" edittype="normal"/>
                <Cell col="4" text="bind:FINAL_TEST" edittype="normal"/>
                <Cell col="5" text="bind:REPORT" edittype="normal"/>
                <Cell col="6" text="bind:SCORE" maskeditlimitbymask="integer" expr="nexacro.round((MIDDLE_TEST / 100.0 * 40) + (FINAL_TEST / 100.0 * 40) + (REPORT / 100.0 * 20),0)"/>
                <Cell col="7" expr="nexacro.round((MIDDLE_TEST / 100.0 * 40) + (FINAL_TEST / 100.0 * 40) + (REPORT / 100.0 * 20),0)&gt;= 90 ? 'A' : nexacro.round((MIDDLE_TEST / 100.0 * 40) + (FINAL_TEST / 100.0 * 40) + (REPORT / 100.0 * 20),0)&gt;= 80 ? 'B' : nexacro.round((MIDDLE_TEST / 100.0 * 40) + (FINAL_TEST / 100.0 * 40) + (REPORT / 100.0 * 20),0)&gt;= 70 ? 'C' : nexacro.round((MIDDLE_TEST / 100.0 * 40) + (FINAL_TEST / 100.0 * 40) + (REPORT / 100.0 * 20),0)&gt;= 60 ? 'D' : 'F'" text="bind:GRADE"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_resetStd" taborder="7" text="전체보기" left="405" top="250" width="63" height="26" onclick="btn_resetStd_onclick"/>
        <Button id="btn_update" taborder="8" text="수정" left="1014" top="250" width="51" height="26" onclick="btn_update_onclick"/>
        <Combo id="cmb_semester" taborder="9" left="637" top="50" width="155" height="26" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" index="0" text="학기를 선택하세요." value="0" onitemchanged="cmb_semester_onitemchanged">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">0</Col>
                <Col id="datacolumn">학기를 선택하세요.</Col>
              </Row>
              <Row>
                <Col id="codecolumn">1</Col>
                <Col id="datacolumn">1학기</Col>
              </Row>
              <Row>
                <Col id="codecolumn">2</Col>
                <Col id="datacolumn">2학기</Col>
              </Row>
            </Rows>
          </Dataset>
        </Combo>
        <Static id="stt_board" taborder="10" text="성적 관리" left="49" top="10" width="191" height="50" font="30px/normal &quot;Gulim&quot;" onclick="stt_board_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[/* 온로드*/
this.score_list_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.fn_searchDept();
	
	
	
	var currentYear = new Date().getFullYear();
    // ds_year 초기화
    this.ds_year.clearData();
	var nRow = this.ds_year.addRow();
	this.ds_year.setColumn(0, "YEAR", "ALL"); 
    this.ds_year.setColumn(0, "DATA", "연도를선택해주세요");
    // 현재 연도와 이전 4개의 연도 추가
    for (var i = 1; i < 6; i++) {
        var year = currentYear + 1 - i;
        var nRow = this.ds_year.addRow();
        this.ds_year.setColumn(nRow, "YEAR", year);  // 데이터값 (검색에 사용될 값)
        this.ds_year.setColumn(nRow, "DATA", year);  // 콤보박스에 표시될 값
    }   
	trace(this.ds_year.getColumn(0,"DATA"))
	var nYear = this.ds_year.getColumn(0,"YEAR");
	this.cmb_year.set_value(nYear);
	this.cmb_searchType.set_value(0);
};




this.ds_dept_onrowposchanged = function(obj:nexacro.NormalDataset,e:nexacro.DSRowPosChangeEventInfo)
{
	var row = this.ds_dept.rowposition;
	trace(row);	var deptcd = this.ds_dept.getColumn(row, "DEPARTMENT_CODE");
	
	this.ds_searchClass.setColumn(0,"DEPARTMENT_CODE",deptcd);
	trace("로우값은 ? " + this.ds_searchClass.getColumn(0, "DEPARTMENT_CODE"));
	
	
	this.fn_searchClass(); 
};

this.grd_class_oncellclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	
	
		
		var row = this.ds_class.rowposition;
		var yearsm = this.ds_class.getColumn(row,"CLASS_START");;
		var semesterm = this.ds_class.getColumn(row,"SEMESTER");;
		var clascd = this.ds_class.getColumn(row,"CLASS_CODE");
		
		
		
		this.ds_searchSttudent.setColumn(0,"YEAR",yearsm);
		this.ds_searchSttudent.setColumn(0,"SEMESTER",semesterm);
		this.ds_searchSttudent.setColumn(0,"CLASS_CODE",clascd);
		
		this.fn_searchStudent();
	
};


this.btn_searchStd_onclick = function (obj:nexacro.Button, e:nexacro.ClickEventInfo) {
    // 검색 타입과 키워드 가져오기
    var searchType = this.ds_search.getColumn(0, "SEARCHTYPE"); // 선택된 검색 조건
    var searchValue = this.ds_search.getColumn(0, "SEARCHKEYWORD"); // 검색 키워드
	
    // 데이터셋 필터링
    var filterString = "";
    var message = ""; // 알림 메시지 초기화
	
    if (searchValue) {
        if (searchType === "STUDENT_ID") {
            filterString += "STUDENT_ID == '" + searchValue + "'";
        } else if (searchType === "NAME") {
            filterString += "NAME.indexOf('" + searchValue + "') >= 0";
        } else {
			this.alert("학번 또는 이름을 선택해 주세요");
		}
        
        // 필터링 적용
        this.ds_scoreList.filter(filterString);
        
        // 필터링 결과 확인
        if (this.ds_scoreList.getRowCount() === 0) {
            message = "해당 조건에 맞는 데이터가 없습니다."; // 데이터 없음 메시지
            this.ds_scoreList.filter(""); // 필터 제거하여 전체 데이터셋 표시
        }
    } else {
        message = "검색어를 입력해주세요."; // 검색어 없음 메시지
        this.ds_scoreList.filter(""); // 필터 제거하여 전체 데이터셋 표시
    }
	
    // 알림 메시지 표시
    if (message) {
        this.alert(message);
    }
};



this.btn_resetStd_onclick = function (obj:nexacro.Button, e:nexacro.ClickEventInfo) {
    // 전체 데이터셋을 출력
    this.ds_scoreList.filter(""); // 필터 제거하여 전체 데이터셋 표시
    this.alert("전체 데이터가 출력되었습니다."); // 알림 메시지 표시
};


this.grd_scoreList_oninput = function(obj:nexacro.Grid, e:nexacro.InputEventInfo)
{
    var row = this.ds_scoreList.rowposition;
   
    this.ds_scoreList.setColumn(row, "CHECK", "1");
};



this.btn_update_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.updateCheck();
	
	var checkedCount = this.ds_updateScore.rowcount;
	if(checkedCount>0){
		if(confirm("기입된 성적을 수정하시겠습니까?")){
			this.fn_update();
		}
	}
	else{
		alert("수정된 항목이 존재하지 않습니다.");
	}
};

// 수정목록 필터링
this.updateCheck = function() {
    this.ds_updateScore.clearData();
    trace("필터링 전 " + this.ds_scoreList.getRowCount());
    this.ds_scoreList.filter("CHECK==1");
    trace("필터링 후 " + this.ds_scoreList.getRowCount());

    var nRow = this.ds_scoreList.getRowCount();
    var gdsAd = nexacro.getApplication();
    var adCode = gdsAd.gds_adminInfo.getColumn(0, "ADMIN_CODE");
    trace("ad코드는? " + adCode);

    // 유효성 검사 추가
	for (var i = 0; i < nRow; i++) {
		var inputValue = this.ds_scoreList.getColumn(i, "MIDDLE_TEST"); // MIDDLE_TEST 값 가져오기
		var inputValue2 = this.ds_scoreList.getColumn(i, "FINAL_TEST"); // FINAL_TEST 값 가져오기
		var inputValue3 = this.ds_scoreList.getColumn(i, "REPORT"); // REPORT 값 가져오기
		
		trace(inputValue,inputValue2,inputValue3+"@@@@@@@@@@@@@@@@@@@@@@@!@#%$!@#$!@#$");

		// 숫자만 입력 가능하도록 체크 (각 열에 대해)
		if (!/^\d*$/.test(inputValue) || !/^\d*$/.test(inputValue2) || !/^\d*$/.test(inputValue3)) {
			alert("숫자만 입력 가능합니다. 행: " + (i + 1));
			this.ds_scoreList.filter(""); // 필터 초기화
			return; // 유효성 검사 실패 시 함수 종료
		}

		// 100 미만의 숫자만 허용 (각 열에 대해)
		if (parseInt(inputValue, 10) >= 100 || parseInt(inputValue2, 10) >= 100 || parseInt(inputValue3, 10) >= 100) {
			alert("100 미만의 숫자만 입력 가능합니다. 행: " + (i + 1));
			this.ds_scoreList.filter(""); // 필터 초기화
			return; // 유효성 검사 실패 시 함수 종료
		}

		// 모든 행의 작성자 설정
		this.ds_scoreList.setColumn(i, "UPD_USR", adCode);
		trace("작성자?? " + this.ds_scoreList.getColumn(i, "UPD_USR"));
	}

    this.ds_updateScore.copyData(this.ds_scoreList, true);
    this.ds_scoreList.filter(""); // 필터 초기화
    this.ds_scoreList.set_enableevent(true);
};

this.cmb_year_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
    if(this.cmb_year.value != "ALL" && this.cmb_semester.value != "0"){
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.ds_class.filter("CLASS_START == '" + this.cmb_year.value + "' && SEMESTER == '" + this.cmb_semester.value + "'");
    }
    else if(this.cmb_year.value == "ALL" && this.cmb_semester.value != "0"){
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.ds_class.filter("SEMESTER == '" + this.cmb_semester.value + "'");
    }
    else if(this.cmb_year.value != "ALL" && this.cmb_semester.value == "0"){
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.ds_class.filter("CLASS_START == '" + this.cmb_year.value + "'");
    } else {
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.alert("연도 및 학기를 선택해주세요");
    }
};

this.cmb_semester_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{
	    if(this.cmb_year.value != "ALL" && this.cmb_semester.value != "0"){
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.ds_class.filter("CLASS_START == '" + this.cmb_year.value + "' && SEMESTER == '" + this.cmb_semester.value + "'");
    }
    else if(this.cmb_year.value == "ALL" && this.cmb_semester.value != "0"){
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.ds_class.filter("SEMESTER == '" + this.cmb_semester.value + "'");
    }
    else if(this.cmb_year.value != "ALL" && this.cmb_semester.value == "0"){
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.ds_class.filter("CLASS_START == '" + this.cmb_year.value + "'");
    } else {
        trace(this.cmb_year.value);
        trace(this.cmb_semester.value);
        this.alert("연도 및 학기를 선택해주세요");
    }
};






this.fn_update = function() {
	
	var strSvcId    = "updateScStudent";
	var strSvcUrl   = "svc::updateScStudent.do";
	var inData      = "ds_updateScore = ds_updateScore";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallBack_update";
	var isAsync     = true;
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
	
}

this.fnCallBack_update = function (svcID, errCD, errMsg)
{	
	if(svcID == "updateScStudent" && errCD == 0){
		trace("잘 받아왔나?");
		this.fn_searchStudent();
	} else if (errCD == -1){	
		alert(errMsg);
	}
};




this.fn_searchStudent = function() {
	
	var strSvcId    = "selectScStudent";
	var strSvcUrl   = "svc::selectScStudent.do";
	var inData      = "ds_searchSttudent=ds_searchSttudent";
	var outData     = "ds_scoreList = ds_scoreList";
	var strArg      = "";
	var callBackFnc = "fnCallBack_deptInfo";
	var isAsync     = true;
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
}

this.fn_searchDept = function() {
	
	var strSvcId    = "searchScDept";
	var strSvcUrl   = "svc::selectScDept.do";
	var inData      = "";
	var outData     = "ds_dept = ds_dept";
	var strArg      = "";
	var callBackFnc = "fnCallBack_deptInfo";
	var isAsync     = true;
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
}

this.fn_searchClass = function() {
	
	
	var strSvcId    = "searchScClass";
	var strSvcUrl   = "svc::searchScClass.do";
	var inData      = "ds_searchClass = ds_searchClass";
	var outData     = "ds_class = ds_class";
	var strArg      = "";
	var callBackFnc = "fnCallBack_deptInfo";
	var isAsync     = true;
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
}



]]></Script>
    <Objects>
      <Dataset id="ds_year">
        <ColumnInfo>
          <Column id="YEAR" type="STRING" size="256"/>
          <Column id="DATA" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_dept" onrowposchanged="ds_dept_onrowposchanged">
        <ColumnInfo>
          <Column id="DEPARTMENT_CODE" type="STRING" size="256"/>
          <Column id="DEPARTMENT_NAME" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_class">
        <ColumnInfo>
          <Column id="CLASS_CODE" type="STRING" size="256"/>
          <Column id="CLASS_NAME" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="CLASS_START" type="STRING" size="256"/>
          <Column id="SEMESTER" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_scoreList" useclientlayout="true">
        <ColumnInfo>
          <Column id="STUDENT_ID" type="INT" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="MIDDLE_TEST" type="INT" size="256"/>
          <Column id="FINAL_TEST" type="INT" size="256"/>
          <Column id="REPORT" type="INT" size="256"/>
          <Column id="SCORE" type="INT" size="256"/>
          <Column id="GRADE" type="STRING" size="256"/>
          <Column id="CHECK" type="INT" size="256"/>
          <Column id="CLASS_CODE" type="INT" size="256"/>
          <Column id="UPD_USR" type="STRING" size="256"/>
          <Column id="UPD_DTM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_search">
        <ColumnInfo>
          <Column id="SEARCHTYPE" type="STRING" size="256"/>
          <Column id="SEARCHKEYWORD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_searchClass">
        <ColumnInfo>
          <Column id="DEPARTMENT_CODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_searchSttudent">
        <ColumnInfo>
          <Column id="YEAR" type="STRING" size="256"/>
          <Column id="CLASS_CODE" type="STRING" size="256"/>
          <Column id="SEMESTER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_updateScore"/>
      <Dataset id="ds_semester"/>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="cmb_searchType" propid="value" datasetid="ds_search" columnid="SEARCHTYPE"/>
      <BindItem id="item1" compid="edt_searchKeyword" propid="value" datasetid="ds_search" columnid="SEARCHKEYWORD"/>
    </Bind>
  </Form>
</FDL>
