<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Popup_Work" width="960" height="610" titletext="New Form" onload="Popup_Work_onload">
    <Layouts>
      <Layout height="610" width="960">
        <Static id="Static00_03_00_00_00_00" taborder="0" left="671" top="209" width="257" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_01_00_00_00_00" taborder="1" left="671" top="258" width="257" height="49" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_01_00_00_00" taborder="2" left="399" top="258" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_00_00_00" taborder="3" left="671" top="160" width="257" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_00_00" taborder="4" left="671" top="111" width="257" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_01_00_00" taborder="5" left="399" top="209" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_01_00" taborder="6" left="399" top="160" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_01" taborder="7" left="399" top="111" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_00" taborder="8" left="671" top="62" width="257" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03" taborder="9" left="399" top="62" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00" taborder="10" left="302" top="62" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   학번" font="12px/normal &quot;Gulim&quot;"/>
        <Edit id="edt_id" taborder="11" left="411" top="72" width="152" height="30" onchanged="edt_id_onchanged"/>
        <Edit id="edt_name" taborder="12" left="411" top="121" width="152" height="30" onchanged="edt_name_onchanged"/>
        <Static id="Static00_00" taborder="13" left="302" top="111" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   이름"/>
        <Static id="Static00_01" taborder="14" left="574" top="62" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   비밀번호"/>
        <Edit id="edt_password" taborder="15" left="683" top="72" width="233" height="30" onchanged="edt_password_onchanged" password="true"/>
        <Static id="Static00_00_00" taborder="16" left="574" top="111" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   학과"/>
        <Static id="Static00_02" taborder="17" left="302" top="160" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   학년"/>
        <Static id="Static00_01_00" taborder="18" left="574" top="160" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   핸드폰"/>
        <Edit id="edt_phone" taborder="19" left="683" top="170" width="233" height="30"/>
        <Static id="Static00_00_00_00" taborder="20" left="574" top="209" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   이메일"/>
        <Static id="Static00_00_01" taborder="21" left="302" top="209" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   성별"/>
        <ImageViewer id="ImageViewer00" taborder="22" left="66" top="62" width="177" height="236" stretch="fit"/>
        <Static id="Static00_00_01_00" taborder="23" left="302" top="258" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   상태"/>
        <Static id="Static00_00_01_00_00" taborder="24" left="574" top="258" width="98" height="49" background="#e7e7e8" border="1px solid #d3d3d4" text="   생년월일"/>
        <Button id="Stu_Add_btn" taborder="25" text="저장" left="383" top="520" width="77" height="38" onclick="Stu_Add_btn_onclick"/>
        <Radio id="rdo_gender" taborder="26" left="412" top="216" width="150" height="36" innerdataset="ds_ger" datacolumn="data" codecolumn="code" index="0" text="남자" value="M" direction="vertical"/>
        <Combo id="cmb_dept" taborder="27" text="" left="684" top="121" width="231" height="31" index="0" innerdataset="ds_dept" codecolumn="DEPARTMENT_CODE" datacolumn="DEPARTMENT_NAME" value=""/>
        <Combo id="cmb_static" taborder="28" text="" left="411" top="268" width="153" height="31" index="0" innerdataset="ds_static" codecolumn="code" datacolumn="data" value=""/>
        <Calendar id="edt_birthday" taborder="29" left="681" top="267" width="236" height="31" dateformat="yyyy-MM-dd" accessibilityenable="false"/>
        <Combo id="cmb_univ" taborder="30" text="1학년" left="411" top="170" width="153" height="31" index="0" innerdataset="ds_grade" codecolumn="code" datacolumn="data" value="1"/>
        <Button id="btn_addfile" taborder="31" text="등록" left="203" top="307" width="43" height="20" onclick="btn_addfile_onclick"/>
        <Edit id="edt_filename" taborder="32" left="64" top="307" width="136" height="21" readonly="true"/>
        <Button id="btn_Reset" taborder="33" text="닫기" left="494" top="520" width="77" height="38" onclick="btn_Reset_onclick"/>
        <Static id="Static00_03_01_00_00_00_02_00_00" taborder="34" left="399" top="356" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_03_01_00_00_00_01_00_01" taborder="35" left="399" top="405" width="534" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_00_01_00_01_00_01" taborder="36" left="302" top="405" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   주소"/>
        <Edit id="edt_Email" taborder="37" left="683" top="219" width="119" height="30" readonly="true" cssclass="edt_Adr" displaynulltext="학번이 필요합니다"/>
        <Edit id="edt_Adr" taborder="38" left="410" top="415" width="512" height="30" readonly="true" displaynulltext="주소검색 버튼으로 검색하세요" cssclass="edt_Adr"/>
        <Static id="Static00_03_01_00_00_00_02_01_00" taborder="39" left="399" top="307" width="176" height="50" background="white" border="1px solid #d3d3d4"/>
        <Static id="Static00_00_01_00_02_00_01" taborder="40" left="302" top="307" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   등록ID"/>
        <Edit id="edt_Admin" taborder="41" left="411" top="317" width="153" height="30" readonly="true"/>
        <Edit id="edt_Domain" taborder="42" left="801" top="219" width="119" height="30" visible="true" onkeyup="edt_Domain_onkeyup" onchanged="edt_Domain_onchanged" oneditclick="edt_Domain_oneditclick"/>
        <Combo id="cmb_Domain" taborder="43" left="801" top="219" width="119" height="30" innerdataset="ds_domain" codecolumn="code" datacolumn="data" text="" onitemchanged="cmb_Domain_onitemchanged"/>
        <Button id="btn_Adr" taborder="44" text="주소검색" left="580" top="362" width="80" height="38" onclick="btn_Adr_onclick"/>
        <Static id="Static00_00_01_00_01_00_00_00" taborder="45" left="302" top="454" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   상세주소"/>
        <Static id="Static00_03_01_00_00_00_01_00_00_00" taborder="46" left="399" top="454" width="534" height="50" background="white" border="1px solid #d3d3d4"/>
        <Edit id="edt_DtlAdr" taborder="47" left="410" top="464" width="512" height="30" displaynulltext="상세주소를 입력하세요"/>
        <Edit id="edt_ZipCd" taborder="48" left="411" top="366" width="153" height="30" displaynulltext="우편번호" enable="true" readonly="true" cssclass="edt_Adr"/>
        <Static id="Static00_00_01_00_02_00_00_00" taborder="49" left="302" top="356" width="98" height="50" background="#e7e7e8" border="1px solid #d3d3d4" text="   우편번호"/>
        <WebBrowser id="wb_Adress" taborder="50" left="130" top="404" width="100" height="100" visible="false" onusernotify="wb_Adress_onusernotify"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[//처리콜백 함수
this.fnCallback = function(svcID,errorCode,errorMsg)
{
   // 에러 시 화면 처리 내역
   if(errorCode == -1)
   {
      this.alert(errorMsg);
      return;
   }

	switch(svcID)
	{
		case "insertAdStudent":
			this.FileUpTransfer00.upload('http://localhost:8082/HanaUIS/fileupload.jsp');
			this.alert("성공적으로 등록을 하였습니다.");
			this.close();
			break;
		case "studCheckId":
			var chkId = this.ds_vali.getColumn(0, "CHECK_ID");
			if (chkId == "Y"){
				alert("사용가능한 교번입니다");
				this.edt_Email.set_readonly(false);
			}else {
				alert("중복된 교번입니다");
			}
			break;
		// 이메일 중복체크
		case "stuCheckEm":
			var chkEm = this.ds_vali.getColumn(0, "CHECK_EM");
			if (chkEm == "Y") {
				// 연락처 유효성 정규식
				this.fn_valiPhChk();
			} else {
				alert("중복된 email 입니다");
			}
			break;
		default:
			break;
	}

};


// 자식(팝업) 폼 코드 (팝업 로드 시 호출되는 함수)
this.Popup_Work_onload = function(obj, e) {
    // 부모 폼에서 넘겨받은 param1 (데이터셋)과 선택된 학과 코드
    var objParam = this.parent.param1;                // 부모 폼에서 넘긴 데이터셋
    var selectedDepartmentCode = this.parent.selectedDepartmentCode; // 부모 폼에서 넘긴 선택된 학과 코드

    // 데이터셋 복사: 부모 폼에서 넘겨받은 데이터셋을 ds_de에 복사
    this.ds_dept.copyData(objParam);
	
	var gdsApp = nexacro.getApplication();
	var adCode = gdsApp.gds_adminInfo.getColumn(0, "ADMIN_CODE");
	var regdt = gdsApp.gds_adminInfo.getColumn(0, "REGDATE");
	this.save_ds.setColumn(0, "ADMIN_CODE", adCode);
	this.save_ds.setColumn(0, "REGDATE", regdt);


    // 데이터셋에 다른 초기 값 설정 (예시)
    this.save_ds.setColumn(0, "UNIV_YEAR", "1");
    this.save_ds.setColumn(0, "GENDER", "M");
    this.save_ds.setColumn(0, "STATUS", "재학중");
    this.save_ds.setColumn(0, "DEPARTMENT_CODE", selectedDepartmentCode);  // 선택한 학과 코드 설정
	
	this.cmb_dept.set_value(selectedDepartmentCode);  
	
	// 초기화용 ds 카피해두기
	this.ds_resetStu.clearData();
	this.ds_reAdr.clearData();
	this.ds_resetStu.copyData(this.save_ds);
	this.ds_reAdr.copyData(this.ds_address);
	
	this.ImageViewer00.set_text("500KB 이하");
};

// 등록 시 이벤트
this.Stu_Add_btn_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	
	// 이메일 파트 합치기
	var ePart = this.save_ds.getColumn(0, "EMAIL_PART");
	var dPart = this.save_ds.getColumn(0, "DOMAIN_PART");
	this.save_ds.setColumn(0, "EMAIL", ePart + dPart);
	
	// 주소 파트 합치기
	var fAddr = this.ds_address.getColumn(0, "FULLADDR");
	var rAddr = this.ds_address.getColumn(0, "REMAINADDR");
	this.save_ds.setColumn(0, "ZIPCODE", this.ds_address.getColumn(0, "ZIPCODE"));
	this.save_ds.setColumn(0, "ADDRESS", fAddr + "/" + rAddr);
	
	// id null 검사
	var stuId = this.save_ds.getColumn(0, "STUDENT_ID");
	if (stuId == null || stuId == '' || stuId == 'undefined'){
		alert("아이디를 입력하세요");
		return;
	}
	// pw null 검사
	var stuPw = this.save_ds.getColumn(0, "PASSWORD");
	if (stuPw == null || stuPw == '' || stuPw == 'undefined'){
		alert("비밀번호를 입력하세요");
		return;
	}
	// 우편번호 null 검사
	var zipCd = this.save_ds.getColumn(0, "ZIPCODE");
	if (zipCd == null || zipCd == '' || zipCd == 'undefined'){
		alert("주소를 입력하세요");
		return;
	}
	// 이름 null 검사
	var name = this.save_ds.getColumn(0, "NAME");
	if (name == null || name == '' || name == 'undefined'){
		alert("이름을 입력하세요");
		return;
	}
	

	// 학과 선택 했는지?
	var dept = this.cmb_dept.value; // 수정
	if (dept == 0){
		alert("학과를 선택해주세요");
	} else {
		this.fn_valiEmChk();
	}
	
};

// 등록 트랜젝션
this.insertstudent = function()
{
   var strSvcId    = "insertAdStudent";
   var strSvcUrl   = "svc::insertAdStudent.do";
   var inData      = "save_ds = save_ds";
   var outData     = "";
   var strArg      = "";
   var callBackFnc = "fnCallback";
   var isAsync     = true;
   
   this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync); 

};
// 확인 해보고 수정
this.btn_Reset_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 초기 ds 다시 가져오기
// 	this.save_ds.copyData(this.ds_resetStu);
// 	this.ds_address.copyData(this.ds_reAdr);
	if(this.confirm("닫으시겠습니까?")){
		this.close();
	}
	
};


//도메인주소 cmb에 넣기 + 직접입력 설정해두기
this.cmb_Domain_onitemchanged = function(obj:nexacro.Combo,e:nexacro.ItemChangeEventInfo)
{	
	var dPart = obj.value
	
	// 직접입력 선택시
	if (dPart == "직접입력") {  
        // 입력가능한 상태 만들기
		this.edt_Domain.set_value("");
		// edit박스 맨 앞으로
		this.edt_Domain.bringToFront();
		// @를 맨 앞에 추가되도록 이벤트 강제호출
		this.edt_Domain_oneditclick(this.edt_Domain, null);
    } else {
		// 직접입력 아닐시 선택값 사용
        this.save_ds.setColumn(0, "DOMAIN_PART", dPart);
    }
	
};

// 도메인 직접입력시 esc 누르면 다시 콤보박스 선택
this.edt_Domain_onkeyup = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if (e.keycode == 27) {
		this.cmb_Domain.bringToFront();
	}
};

// 이메일 입력파트 - @없이 작성시 맨 앞에 @ 추가
this.edt_Domain_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
	var cVal = obj.value;
	
	if(cVal.indexOf("@") !== 0){
		obj.set_value("@" + cVal.replace("@", ""));
	}
};

// 이메일 입력파트 - 공백일 경우 @를 맨 앞에 추가한 후 커서를 그 뒤로
this.edt_Domain_oneditclick = function(obj:nexacro.Edit,e:nexacro.EditClickEventInfo)
{
	var cVal = obj.value;
	if (cVal == "") {
		obj.set_value("@");
		obj.setCaretPos(1);
	}
	
};


// 주소 버튼 클릭 시
this.btn_Adr_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.wb_Adress.set_url("http://localhost:8082/HanaUIS/postcode.jsp");
};

// 주소검색 - 카카오API
this.wb_Adress_onusernotify = function(obj:nexacro.WebBrowser,e:nexacro.WebUserNotifyEventInfo)
{
	// 주소검색 결과 받아오기
    var receivedData = e.userdata;
    var dataObj = JSON.parse(receivedData);

    // 우편번호, 도로명 주소, 지번 주소, 참고 주소 ds에 넣기
    this.ds_address.setColumn(0, "ZIPCODE", dataObj.zonecode);
    this.ds_address.setColumn(0, "MAINADDR", dataObj.selectedAddress);
    this.ds_address.setColumn(0, "EXTRAADDR", dataObj.extraAddress);
	
	// 도로명(지번)주소 + 참고주소 합치기
	var mAddr = this.ds_address.getColumn(0, "MAINADDR");
	var eAddr = this.ds_address.getColumn(0, "EXTRAADDR");
	this.ds_address.setColumn(0, "FULLADDR", mAddr + "" + eAddr);
};




// 5-1) 이메일 - 정규식 + 중복확인
this.edt_id_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
	var stuId = obj.value;
	if(isNaN(stuId)){
		alert("숫자만 입력 가능합니다");
		obj.set_value("");
		obj.setFocus();
	} else if(stuId.length !=6) {
		alert("학번은 여섯자리 입니다")
		obj.set_value("");
		obj.setFocus();	
	} else {
	this.fn_dupIdChk(stuId);
	}
};	

// 5-4) 이메일 정규식
this.fn_valiEmChk = function ()
{
	var email = this.save_ds.getColumn(0, "EMAIL");
	var regem = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
		
	if (!regem.test(email)) {
		alert("유효한 이메일 주소를 입력하세요.");
		this.edt_Email.set_value("");
		this.edt_Email.setFocus();
	} else {
		this.fn_dupEmChk();
	}
};

// 5-5) 이메일 중복체크	
this.fn_dupEmChk = function ()
{
	var strSvcId    = "stuCheckEm";
	var strSvcUrl   = "svc::stuCheckEm.do";
	var inData      = "save_ds=save_ds";
	var outData     = "ds_vali=ds_vali";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	var isAsync     = true;	
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};
	

// 이거 수정해야함 ---> 수정함
this.fn_dupIdChk = function (stuId){

	var strSvcId    = "studCheckId";
	var strSvcUrl   = "svc::studCheckId.do";
	var inData      = "";
	var outData     = "ds_vali=ds_vali";
	var strArg      = "STUDENT_ID="+stuId;
	var callBackFnc = "fnCallback";
	var isAsync     = true;
	
	this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync); 
	
}

// 5-2) 비밀번호 유효성 검사

this.edt_password_onchanged = function(obj:nexacro.Edit,e:nexacro.ChangeEventInfo)
{
	var password = obj.value;
    var regex = /^(?=.*[!@#$%^&*(),.?":{}|<>])[A-Za-z\d!@#$%^&*(),.?":{}|<>]{4,}$/;

    if (!regex.test(password)) {
        alert("비밀번호는 최소 4자 이상이며, 특수문자가 포함되어야 합니다.");
        obj.set_value("");
        obj.setFocus();
    } else {
        trace("비밀번호가 유효합니다.");
    }	
};


// 5-6) 연락처 정규식
this.fn_valiPhChk = function ()
{
	var phone = this.save_ds.getColumn(0, "PHONE");
	var regph = /^(01[016789]{1})-[0-9]{3,4}-[0-9]{4}$/;
	if(!regph.test(phone)){
		alert("연락처는 다음과 같이 입력해주세요 : 01x-xxxx-xxxx");
		this.edt_Phone.set_value("");
		this.edt_Phone.setFocus();
	} else {
		this.insertstudent();
	}	
};







// 필요없는 함수
this.FileUpload00_onitemchanged = function(obj:nexacro.FileUpload,e:nexacro.FileUploadItemChangeEventInfo)
{
	this.ImageViewer00.set_image("URL('file://" + this.FileUpload00.value + "')");
	
	
 	var filePath = this.FileUpload00.value;
 	var fileName = filePath.split("\\").pop();
	
	
	//this.FileUpTransfer00.upload('http://localhost:8082/HanaUIS/fileupload.jsp');
};

// 이미지 등록 이벤트
this.btn_addfile_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.FileDialog00.open('nexacro17', FileDialog.MULTILOAD);
};

// 이미지 등록 시 확장자 확인
this.gfnIsImageFile = function(fileTxt) {
    var imageExt = ["png", "jpg", "jpeg"];
    var extNm = fileTxt.substr(fileTxt.lastIndexOf(".") + 1).toLowerCase(); // 확장자를 소문자로 변환
    return imageExt.includes(extNm);
};

// 파일 올릴 때 함수
this.FileDialog00_onclose = function(obj:nexacro.FileDialog, e:nexacro.FileDialogEventInfo) {
	var filetype = e.virtualfiles[0].filename;
	if(e.virtualfiles.length > 1){
		alert("파일이 두개 이상입니다.");
	}
 	else if(!this.gfnIsImageFile(filetype)){
		alert("png, "+ "jpg, "+ "jpeg" + "가 아닙니다.");
 	}
	else{
		this.addFileList(e.virtualfiles);
		
		
		if(this.dsList.getColumn(0, "FILE_SIZE") < 500000){
			var name;
			for (var i = 0; i < e.virtualfiles.length; i++) {    
				this.save_ds.setColumn(0, "PHOTO", e.virtualfiles[i].filename);
				
				name = e.virtualfiles[i].filename;
				
				// 파일을 서버에 업로드하는 함수 호출
				this.uploadFileToServer(e.virtualfiles[i]);

			}
			this.edt_filename.set_value(name);
			this.dsList.setColumn(0,"FILE_NAME", name);
		/*	this.showImagePreview(name);*/

			setTimeout(function(){
				this.aftereventFunction();
			}.bind(this), 100);
	
		}else{
			alert("용량이 너무 큽니다. 500KB이하로 해주세요.");
			var fileName = e.virtualfiles[0].filename;
			this.dsList.clearData();
			this.dsList.addRow();
			
			setTimeout(function(){
				this.deleteFile(fileName);
			}.bind(this), 100);
		}
	}

};

// 이미지 미리보기 이벤트
this.aftereventFunction = function(){
	var filename = this.dsList.getColumn(0,"FILE_NAME");
	this.showImagePreview(filename); // 이미지 미리보기 함수
	
}

// 파일 추가 처리 함수
this.addFileList = function(filelist) {
    for (var i = 0, len = filelist.length, vFile; i < len; i++) {
        vFile = filelist[i];
        vFile.addEventHandler("onsuccess", this.FileList_onsuccess, this);
        vFile.addEventHandler("onerror", this.FileList_onerror, this);
		
		vFile.open(null, 1);
    }
};

// 파일 업로드 함수
this.uploadFileToServer = function(vFile) {
	this.FileUpTransfer00.clearFileList();
    this.FileUpTransfer00.addFile(vFile.filename, vFile);
    this.FileUpTransfer00.upload("http://localhost:8082/HanaUIS/showfileupload.jsp"); // JSP 파일 경로
};

// 이미지 미리보기 함수
this.showImagePreview = function(fileName) {
    var encodedFileName = encodeURIComponent(fileName); // 파일 이름 URL 인코딩
    var imagePath = "http://localhost:8082/HanaUIS/showFile.jsp?filename=" + encodedFileName +"&type=view"; // 업로드한 파일 경로
    this.ImageViewer00.set_image("url('" + imagePath + "')"); // ImageViewer에 이미지 설정
	
	// 이미지가 없을 때 나오는 text
	if(this.save_ds.getColumn(0, "PHOTO") == null || this.save_ds.getColumn(0, "PHOTO") == "" || this.save_ds.getColumn(0, "PHOTO") == "undefined"){
		this.ImageViewer00.set_text("500KB 이하");
	}else {
		this.ImageViewer00.set_text("");
	}
	
	setTimeout(function(){
		this.deleteFile(fileName);
	}.bind(this), 10000);

};

// 파일 삭제 요청 함수
this.deleteFile = function(fileName) {
    var encodedFileName = encodeURIComponent(fileName); // 파일 이름 URL 인코딩
    var deleteUrl = "http://localhost:8082/HanaUIS/deleteFile.jsp?filename=" + encodedFileName; // 파일 삭제 요청 URL
	
	var params = {
		filename: fileName // 파일 이름을 파라미터로 전달
	};
	var xhr = new XMLHttpRequest();
	xhr.open("POST", deleteUrl, true);
	xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
	xhr.onreadystatechange = function () {
		if (xhr.readyState === 4) {
			if (xhr.status === 200) {
				trace("서버 응답: ");
			} else {
				trace("오류 발생: " + xhr.status);
			}
		}
	};
	xhr.send("filename=" + encodeURIComponent(fileName));
	
};

// 콜백 함수 정의
this.callbackDeleteFile = function(svcID, errorCode, errorMsg) {
    if (errorCode == 0) {
        trace("파일 삭제 성공");
    } else {
        trace("파일 삭제 실패: " + errorMsg);
        // 추가적인 디버깅 정보 출력
        trace("서비스 ID: " + svcID);
    }
};


// virtualfile의 성공 실패 
this.FileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo) {
    switch (e.reason) {
        case 1:
            obj.getFileSize();
            break;
        case 9: // 들어와졌을 때
            this.FileUpTransfer00.addFile(obj.filename, obj);
			this.dsList.setColumn(0, "FILE_SIZE", e.filesize);
			//this.FileUpTransfer00.upload("http://localhost:8082/HanaUIS/fileupload.jsp");
            break;
    }
};

// 파일 추가 에러시 발동 함수
this.FileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
    trace("errortype: "+e.errortype);
    trace("errormsg: "+e.errormsg);
    trace("statuscode: "+e.statuscode);
};
]]></Script>
    <Objects>
      <Dataset id="ds_ger">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="data" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">M</Col>
            <Col id="data">남자</Col>
          </Row>
          <Row>
            <Col id="code">F</Col>
            <Col id="data">여자</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_dept">
        <ColumnInfo>
          <Column id="DEPARTMENT_CODE" type="STRING" size="256"/>
          <Column id="DEPARTMENT_NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_static">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="data" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">재학중</Col>
            <Col id="data">재학중</Col>
          </Row>
          <Row>
            <Col id="code">휴학중</Col>
            <Col id="data">휴학중</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="save_ds">
        <ColumnInfo>
          <Column id="STUDENT_ID" type="INT" size="256"/>
          <Column id="PASSWORD" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="UNIV_YEAR" type="STRING" size="256"/>
          <Column id="PHONE" type="STRING" size="256"/>
          <Column id="EMAIL" type="STRING" size="256"/>
          <Column id="BIRTHDAY" type="STRING" size="256"/>
          <Column id="GENDER" type="STRING" size="256"/>
          <Column id="ADDRESS" type="STRING" size="256"/>
          <Column id="STATUS" type="STRING" size="256"/>
          <Column id="DEPARTMENT_CODE" type="INT" size="256"/>
          <Column id="PHOTO" type="STRING" size="256"/>
          <Column id="ADMIN_CODE" type="STRING" size="256"/>
          <Column id="REGDATE" type="STRING" size="256"/>
          <Column id="EMAIL_PART" type="STRING" size="256"/>
          <Column id="DOMAIN_PART" type="STRING" size="256"/>
          <Column id="ZIPCODE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_grade">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="data" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">1</Col>
            <Col id="data">1학년</Col>
          </Row>
          <Row>
            <Col id="data">2학년</Col>
            <Col id="code">2</Col>
          </Row>
        </Rows>
      </Dataset>
      <FileUpTransfer id="FileUpTransfer00" onerror="FileUpTransfer00_onerror" onprogress="FileUpTransfer00_onprogress" onsuccess="FileUpTransfer00_onsuccess"/>
      <FileDialog id="FileDialog00" onclose="FileDialog00_onclose"/>
      <Dataset id="dsList">
        <ColumnInfo>
          <Column id="FILE_NAME" type="STRING" size="256"/>
          <Column id="FILE_URL" type="STRING" size="256"/>
          <Column id="FILE_ID" type="STRING" size="256"/>
          <Column id="FILE_SIZE" type="INT" size="256"/>
          <Column id="FILE_PATH" type="STRING" size="256"/>
          <Column id="FILE_TYPE" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_resetStu"/>
      <Dataset id="ds_domain">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="data" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">직접입력</Col>
            <Col id="data">직접입력</Col>
          </Row>
          <Row>
            <Col id="code">@hnu.ac.kr</Col>
            <Col id="data">@hnu.ac.kr</Col>
          </Row>
          <Row>
            <Col id="code">@naver.com</Col>
            <Col id="data">@naver.com</Col>
          </Row>
          <Row>
            <Col id="code">@gmail.com</Col>
            <Col id="data">@gmail.com</Col>
          </Row>
          <Row>
            <Col id="code">@daum.com</Col>
            <Col id="data">@daum.com</Col>
          </Row>
          <Row>
            <Col id="code">@hanmail.net</Col>
            <Col id="data">@hanmail.net</Col>
          </Row>
          <Row>
            <Col id="code">@icloud.com</Col>
            <Col id="data">@icloud.com</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_address">
        <ColumnInfo>
          <Column id="ZIPCODE" type="STRING" size="256"/>
          <Column id="MAINADDR" type="STRING" size="256"/>
          <Column id="EXTRAADDR" type="STRING" size="256"/>
          <Column id="FULLADDR" type="STRING" size="256"/>
          <Column id="REMAINADDR" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_reAdr"/>
      <Dataset id="ds_vali">
        <ColumnInfo>
          <Column id="CHECK_ID" type="STRING" size="256"/>
          <Column id="CHECK_EM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="edt_id" propid="value" datasetid="save_ds" columnid="STUDENT_ID"/>
      <BindItem id="item1" compid="edt_name" propid="value" datasetid="save_ds" columnid="NAME"/>
      <BindItem id="item2" compid="edt_password" propid="value" datasetid="save_ds" columnid="PASSWORD"/>
      <BindItem id="item3" compid="edt_phone" propid="value" datasetid="save_ds" columnid="PHONE"/>
      <BindItem id="item5" compid="rdo_gender" propid="value" datasetid="save_ds" columnid="GENDER"/>
      <BindItem id="item6" compid="cmb_dept" propid="value" datasetid="save_ds" columnid="DEPARTMENT_CODE"/>
      <BindItem id="item7" compid="cmb_static" propid="value" datasetid="save_ds" columnid="STATUS"/>
      <BindItem id="item8" compid="edt_birthday" propid="value" datasetid="save_ds" columnid="BIRTHDAY"/>
      <BindItem id="item9" compid="cmb_univ" propid="value" datasetid="save_ds" columnid="UNIV_YEAR"/>
      <BindItem id="item4" compid="edt_Email" propid="value" datasetid="save_ds" columnid="EMAIL_PART"/>
      <BindItem id="item10" compid="cmb_Domain" propid="value" datasetid="save_ds" columnid="DOMAIN_PART"/>
      <BindItem id="item11" compid="edt_Domain" propid="value" datasetid="save_ds" columnid="DOMAIN_PART"/>
      <BindItem id="item12" compid="edt_ZipCd" propid="value" datasetid="ds_address" columnid="ZIPCODE"/>
      <BindItem id="item13" compid="edt_Adr" propid="value" datasetid="ds_address" columnid="FULLADDR"/>
      <BindItem id="item14" compid="edt_DtlAdr" propid="value" datasetid="ds_address" columnid="REMAINADDR"/>
      <BindItem id="item15" compid="edt_Admin" propid="value" datasetid="save_ds" columnid="ADMIN_CODE"/>
    </Bind>
  </Form>
</FDL>
