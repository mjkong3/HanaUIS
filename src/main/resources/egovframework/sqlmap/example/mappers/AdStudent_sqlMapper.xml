<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
   namespace="ateam.mapper.AdStudentMapper">
   <select id="selectDepartment" resultType="hashMap">
      SELECT DEPARTMENT_CODE, DEPARTMENT_NAME
      FROM DEPARTMENT
   </select>

   <select id="selectAdStudent" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT a.STUDENT_ID as STUDENT_ID,
			a.NAME as NAME,
			a.UNIV_YEAR as UNIV_YEAR,
			a.PHONE as PHONE,
			a.EMAIL as EMAIL,
			DATE_FORMAT(a.BIRTHDAY, '%Y-%m-%d') AS BIRTHDAY,
			a.GENDER as GENDER,
			a.ADDRESS as ADDRESS,
			a.STATUS as STATUS,
			a.DEPARTMENT_CODE as DEPARTMENT_CODE,
			d.DEPARTMENT_NAME as DEPARTMENT_NAME,
			0 AS 'Check'
      FROM STUDENT a
	      LEFT JOIN DEPARTMENT d
	      	on a.DEPARTMENT_CODE = d.DEPARTMENT_CODE
      WHERE 1=1
      <if test="DEPARTMENT_CODE != 00">
    	  AND a.DEPARTMENT_CODE = #{DEPARTMENT_CODE}
      </if>
      
      <if test="SEARCH_WORD != null">
         <if test="SEARCH_TYPE == 'ALL'"> 
            AND (a.STUDENT_ID LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.NAME LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.UNIV_YEAR LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.PHONE LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.EMAIL LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.BIRTHDAY LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.GENDER LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.ADDRESS LIKE CONCAT('%', #{SEARCH_WORD}, '%')
            OR a.STATUS LIKE CONCAT('%', #{SEARCH_WORD}, '%'))
         </if>
         <if test="SEARCH_TYPE == 'STUDENT_ID'">
            AND a.STUDENT_ID LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'NAME'">
            AND a.NAME LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'STATUS'">
            AND a.STATUS LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'EMAIL'">
            AND a.EMAIL LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'PHONE'">
            AND a.PHONE LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'UNIV_YEAR'">
            AND a.UNIV_YEAR LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'BIRTHDAY'">
            AND a.BIRTHDAY LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'GENDER'">
            AND a.GENDER LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
         <if test="SEARCH_TYPE == 'ADDRESS'">
            AND a.ADDRESS LIKE CONCAT('%', #{SEARCH_WORD}, '%')
         </if>
      </if>
      
   </select>
   
   <select id="studCheckId" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT 
      	CASE WHEN COUNT(0) THEN 'N' ELSE 'Y'
		END as CHECK_ID
		FROM STUDENT
		WHERE 1=1
			AND STUDENT_ID = #{STUDENT_ID}
   
   </select>
   
   <select id="checkAdStudent" parameterType="java.util.Map" resultType="Integer">
      SELECT COUNT(1)
      FROM STUDENT
      WHERE STUDENT_ID = #{STUDENT_ID}
   </select>
   
   
   <insert id="insertAdStudent" parameterType="java.util.Map">
      INSERT INTO STUDENT (STUDENT_ID,
               PASSWORD,
               NAME,
               UNIV_YEAR,
               PHONE,
               EMAIL,
               BIRTHDAY,
               GENDER,
               ADDRESS,
               STATUS,
               DEPARTMENT_CODE,
               PHOTO,
               CRE_DTM,
               CRE_USR,
               ZIPCODE)
               VALUES (#{STUDENT_ID},
                     SHA2(#{PASSWORD}, 256),
                     #{NAME},
                     #{UNIV_YEAR},
                     #{PHONE},
                     #{EMAIL},
                     #{BIRTHDAY},
                     #{GENDER},
                     #{ADDRESS},
                     #{STATUS},
                     #{DEPARTMENT_CODE},
                     #{PHOTO},
                     NOW(),
                     #{ADMIN_CODE},
                     #{ZIPCODE})
   
   </insert>
   
   <update id="updateAdStudent" parameterType="java.util.Map">
      UPDATE STUDENT set
               PASSWORD = SHA2(#{PASSWORD}, 256),
               NAME = #{NAME},
               UNIV_YEAR = #{UNIV_YEAR},
               PHONE = #{PHONE},
               EMAIL = #{EMAIL},
               BIRTHDAY = #{BIRTHDAY},
               GENDER = #{GENDER},
               ADDRESS = #{ADDRESS},
               STATUS = #{STATUS},
               DEPARTMENT_CODE = #{DEPARTMENT_CODE},
               PHOTO = #{PHOTO},
               UPD_DTM = NOW(),
               UPD_USR = #{ADMIN_CODE},
               ZIPCODE = #{ZIPCODE}
       WHERE STUDENT_ID = #{STUDENT_ID}
   </update>
   
   <select id="stuCheckEm" parameterType="java.util.Map" resultType="hashMap">
	   	SELECT CASE WHEN COUNT(0) THEN 'N' ELSE 'Y'
				END as CHECK_EM
			FROM STUDENT
	  		WHERE EMAIL = #{EMAIL}
	  			AND STUDENT_ID != #{STUDENT_ID}
   </select>
   
   
   <select id="selectAdStudentdtl" parameterType="hashMap" resultType="hashMap">
      SELECT STUDENT_ID,
               PASSWORD,
               NAME,
               UNIV_YEAR,
               PHONE,
               EMAIL,
               DATE_FORMAT(BIRTHDAY, '%Y-%m-%d') AS BIRTHDAY,
               GENDER,
               ADDRESS,
               STATUS,
               DEPARTMENT_CODE,
               PHOTO,
               UPD_USR as ADMIN_CODE,
               UPD_DTM as REGDATE,
               ZIPCODE
      FROM STUDENT
      WHERE 1=1
      AND STUDENT_ID = #{STUDENT_ID}
   </select>
   
   <delete id="deletAdStudent" parameterType="java.util.Map">
      DELETE FROM STUDENT
      WHERE STUDENT_ID = #{STUDENT_ID}
   </delete>
   
   <select id="stdchecklogin" resultType="ateam.dto.StudentDTO">
		SELECT STUDENT_ID,
				NAME,
				PHONE,
				EMAIL,
				BIRTHDAY,
				GENDER,
				ADDRESS,
				STATUS,
				DEPARTMENT_CODE,
				PHOTO
		FROM STUDENT
		WHERE STUDENT_ID = #{studentId}
			AND PASSWORD = #{password}
	</select>
	
	<select id="checkStudentExcel" parameterType="java.util.List" resultType="hashMap">
		SELECT STUDENT_ID
		FROM STUDENT
		WHERE STUDENT_ID IN 
		<foreach collection="list" item="student" open="(" separator="," close=")">
	        #{student.학번}
	    </foreach>
	</select>
	
	<insert id="insertexcelStu" parameterType="java.util.Map">
      INSERT INTO STUDENT (STUDENT_ID,
               PASSWORD,
               NAME,
               UNIV_YEAR,
               PHONE,
               EMAIL,
               BIRTHDAY,
               GENDER,
               ADDRESS,
               STATUS,
               DEPARTMENT_CODE,
               CRE_DTM,
               CRE_USR,
               ZIPCODE)
               VALUES (#{학번},
                     SHA2(#{비밀번호}, 256),
                     #{이름},
                     #{학년},
                     #{연락처},
                     #{이메일},
                     #{생년월일},
                     #{성별},
                     #{주소},
                     #{학적상태},
                     #{학과코드},
                     NOW(),
                     #{ADMIN_CODE},
                     #{우편번호})   
   </insert>
</mapper>